import fs from 'fs'
import config from 'config'
import client from '../openai.js'
import { unlink } from 'fs/promises'

export async function processAudio(mp3Path) {
  try {
    const transcription = await client.audio.transcriptions.create({
      file: fs.createReadStream(mp3Path),
      model: 'whisper-1',
    })

    console.log(`üéô –†–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç: ${transcription.text}`)

    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ–º, —á—Ç–æ —Ö–æ—á–µ—Ç —Å–¥–µ–ª–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    return analyzeIntent(transcription.text)
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞—É–¥–∏–æ:', error.message)
    throw error
  }
}

// –ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–∞ —á–µ—Ä–µ–∑ OpenAI
export async function analyzeIntent(userMessage) {
  try {
    const response = await client.chat.completions.create({
      model: config.get('openai.model'),
      messages: [
        {
          role: 'system',
          content: `
            –¢—ã –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –∑–∞–¥–∞—á–∞–º–∏. –û–ø—Ä–µ–¥–µ–ª–∏, —á—Ç–æ —Ö–æ—á–µ—Ç —Å–¥–µ–ª–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:
            - –ï—Å–ª–∏ –æ–Ω —Ö–æ—á–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É, –æ—Ç–≤–µ—Ç—å: "add_task:<–æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏>:<—Ç–∏–ø –∑–∞–¥–∞—á–∏>".
            - –ï—Å–ª–∏ –æ–Ω —Ö–æ—á–µ—Ç —É–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É, –æ—Ç–≤–µ—Ç—å: "remove_task:<–æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏>".
            - –ï—Å–ª–∏ –æ–Ω —Ö–æ—á–µ—Ç —É–∑–Ω–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á, –æ—Ç–≤–µ—Ç—å: "list_tasks".
            –û—Ç–≤–µ—á–∞–π —Ç–æ–ª—å–∫–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π, –±–µ–∑ –ø–æ—è—Å–Ω–µ–Ω–∏–π.
          `,
        },
        { role: 'user', content: userMessage },
      ],
    })

    return response.choices[0].message.content
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ OpenAI API:', error)
    throw new Error('–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –Ω–∞–º–µ—Ä–µ–Ω–∏–π —á–µ—Ä–µ–∑ OpenAI API.')
  }
}

// –£–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
export async function removeFile(path) {
  try {
    await unlink(path)
    console.log(`üóëÔ∏è –§–∞–π–ª —É–¥–∞–ª–µ–Ω: ${path}`)
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞:', error.message)
  }
}
