import * as chrono from 'chrono-node'
import { getEventsForDate } from '../services/googleCalendarService.js'

export const eventsHandler = async (ctx) => {
  const userId = ctx.from.id
  let text = ctx.message.text.replace('/events', '').trim()

  if (!text) {
    text = '—Å–µ–≥–æ–¥–Ω—è'
  }

  console.log('üìå –í—Ö–æ–¥—è—â–∏–π —Ç–µ–∫—Å—Ç:', text)
  let parsedDate = chrono.ru.parseDate(text, new Date())
  if (!parsedDate) {
    return ctx.reply('‚ùå –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –¥–∞—Ç—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –¥–∞—Ç—É –ø–æ-–¥—Ä—É–≥–æ–º—É!')
  }

  // –§–∏–∫—Å –ø—Ä–æ–±–ª–µ–º—ã —Å–æ —Å–¥–≤–∏–≥–æ–º –¥–∞—Ç—ã
  parsedDate.setHours(12, 0, 0, 0)

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏ (–≤—Å–µ–≥–¥–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é, –µ—Å–ª–∏ –¥–µ–Ω—å —É–∂–µ –ø—Ä–æ—à–µ–ª)
  const today = new Date()
  if (text.match(/–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫|–≤—Ç–æ—Ä–Ω–∏–∫|—Å—Ä–µ–¥—É|—á–µ—Ç–≤–µ—Ä–≥|–ø—è—Ç–Ω–∏—Ü—É|—Å—É–±–±–æ—Ç—É|–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ/i)) {
    if (parsedDate < today) {
      parsedDate.setDate(parsedDate.getDate() + 7)
    }
  }

  // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º 00:00 –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ —Å–æ–±—ã—Ç–∏–π
  const localDate = new Date(parsedDate.getFullYear(), parsedDate.getMonth(), parsedDate.getDate())

  const dateOptions = { day: 'numeric', month: 'long', year: 'numeric' }
  const formattedDate = localDate.toLocaleDateString('ru-RU', dateOptions)

  // –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–æ–±—ã—Ç–∏—è
  const events = await getEventsForDate(
    userId,
    `${localDate.getFullYear()}-${String(localDate.getMonth() + 1).padStart(2, '0')}-${String(
      localDate.getDate()
    ).padStart(2, '0')}`
  )

  if (!events || events.length === 0) {
    return ctx.reply(`‚ùå –ù–∞ ${formattedDate} –Ω–µ—Ç –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π.`)
  }

  // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —Å–æ–±—ã—Ç–∏–π
  let response = `üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ ${formattedDate}:
`
  events.forEach((event) => {
    const startTime = new Date(event.start).toLocaleTimeString('ru-RU', {
      hour: '2-digit',
      minute: '2-digit',
    })
    response += `- ${startTime} ‚Äì ${event.summary}\n`
  })

  ctx.reply(response)
}
