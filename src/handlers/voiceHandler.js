import { code } from 'telegraf/format'
import { analyzeIntent, processAudio } from '../services/audioService.js'
import { ogg } from '../services/oggService.js'
import { addEventHandler } from '../handlers/addEventHandler.js'

export default async function voiceHandler(ctx) {
  try {
    await ctx.reply(code('–°–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ. –ñ–¥—É –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞...'))

    const link = await ctx.telegram.getFileLink(ctx.message.voice.file_id)
    const userId = String(ctx.message.from.id)

    const oggPath = await ogg.create(link.href, userId)
    const mp3Path = await ogg.toMp3(oggPath, userId)

    const transcription = await processAudio(mp3Path)
    await ctx.reply(`üéô –†–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç: "${transcription}"`)

    if (
      /\b(–¥–æ–±–∞–≤—å —Å–æ–±—ã—Ç–∏–µ|–∑–∞–ø–ª–∞–Ω–∏—Ä—É–π|—Å–æ–∑–¥–∞–π –≤—Å—Ç—Ä–µ—á—É|–Ω–∞–∑–Ω–∞—á—å –≤—Å—Ç—Ä–µ—á—É|–ø–æ—Å—Ç–∞–≤—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ|–¥–æ–±–∞–≤—å –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å|–ø–æ—Å—Ç–∞–≤—å —Å–æ–±—ã—Ç–∏–µ|–ø–æ—Å—Ç–∞–≤—å –≤—Å—Ç—Ä–µ—á—É|–∑–∞–ø–∏—à–∏ –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å|—Å–æ–∑–¥–∞–π –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ|–¥–æ–±–∞–≤—å –≤—Å—Ç—Ä–µ—á—É)\b/i.test(
        transcription
      )
    ) {
      ctx.message.text = transcription
        .replace(
          /\b(–¥–æ–±–∞–≤—å —Å–æ–±—ã—Ç–∏–µ|–∑–∞–ø–ª–∞–Ω–∏—Ä—É–π|—Å–æ–∑–¥–∞–π –≤—Å—Ç—Ä–µ—á—É|–Ω–∞–∑–Ω–∞—á—å –≤—Å—Ç—Ä–µ—á—É|–ø–æ—Å—Ç–∞–≤—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ|–¥–æ–±–∞–≤—å –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å|–ø–æ—Å—Ç–∞–≤—å —Å–æ–±—ã—Ç–∏–µ|–ø–æ—Å—Ç–∞–≤—å –≤—Å—Ç—Ä–µ—á—É|–∑–∞–ø–∏—à–∏ –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å|—Å–æ–∑–¥–∞–π –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ|–¥–æ–±–∞–≤—å –≤—Å—Ç—Ä–µ—á—É)\b/gi,
          ''
        )
        .replace(/^[,.\s]+|[,.\s]+$/g, '') // –£–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ –∑–Ω–∞–∫–∏ –∏ –ø—Ä–æ–±–µ–ª—ã
        .replace(/[¬´¬ª"]/g, '') // –£–±–∏—Ä–∞–µ–º –∫–∞–≤—ã—á–∫–∏
        .trim()

      ctx.message.text = `/addevent ${ctx.message.text}`
      await addEventHandler(ctx)
      return
    }

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å–ª–∏ Whisper –¥–æ–±–∞–≤–∏–ª "add_task"
    if (transcription.toLowerCase().includes('add_task')) {
      ctx.message.text = transcription.replace('add_task:', '/addevent ').trim()
      await addEventHandler(ctx)
      return
    }

    await ctx.reply('‚ùå –ù–µ –ø–æ–Ω—è–ª –∫–æ–º–∞–Ω–¥—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:', error)
    await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
  }
}
